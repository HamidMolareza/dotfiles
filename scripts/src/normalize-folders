#!/bin/bash
set -euo pipefail

# Defaults
ROOT="."
MAX_DEPTH=1
APPLY=false

usage() {
    cat <<EOF
Usage: $(basename "$0") [options]

Normalize folder names up to a configurable depth.

Options:
  --dir PATH        Root working directory (default: current directory)
  --max-depth N     Max directory depth to process (default: 1)
  --apply           Actually rename folders (default: dry-run mode)
  -h, --help        Show this help message

Normalization rules:
  - Convert English letters to lowercase
  - Replace spaces and underscores with '-'
  - Remove problematic symbols (but keep Unicode letters/numbers)
  - Symlinks are skipped
EOF
    exit 0
}

if [[ $# -eq 0 ]]; then
    echo "No options provided. Running in DRY mode (no changes will be made)."
    echo "Defaults: --dir \"$ROOT\" --max-depth $MAX_DEPTH"
    echo "To see all options, use: $(basename "$0") -h"
    echo ""
fi

# Parse args
while [[ $# -gt 0 ]]; do
    case "$1" in
        --apply)
            APPLY=true
            shift
            ;;
        --dir)
            ROOT="$2"
            shift 2
            ;;
        --max-depth)
            MAX_DEPTH="$2"
            shift 2
            ;;
        -h|--help)
            usage
            ;;
        *)
            echo "Unknown argument: $1"
            echo "Try --help for usage."
            exit 1
            ;;
    esac
done

# Normalize a folder name
normalize_name() {
    local name="$1"
    # lowercase (only English)
    name=$(echo "$name" | tr '[:upper:]' '[:lower:]')
    # replace spaces/underscores with dash
    name=$(echo "$name" | sed 's/[ _]\+/-/g')
    # strip problematic symbols but keep Unicode alnum + dash
    name=$(echo "$name" | sed 's/[^[:alnum:]-]//g')
    echo "$name"
}

find "$ROOT" -mindepth 1 -maxdepth "$MAX_DEPTH" -type d | while read -r dir; do
    parent=$(dirname "$dir")
    base=$(basename "$dir")

    # skip symlinks
    if [ -L "$dir" ]; then
        echo "Skipping symlink: $dir"
        continue
    fi

    normalized=$(normalize_name "$base")

    if [ "$base" != "$normalized" ]; then
        target="$parent/$normalized"

        if [ -e "$target" ]; then
            echo "⚠️  Conflict: $target already exists. Skipping $dir"
        else
            if $APPLY; then
                echo "Renaming: $dir -> $target"
                mv "$dir" "$target"
            else
                echo "[DRY] Would rename: $dir -> $target"
            fi
        fi
    fi
done
